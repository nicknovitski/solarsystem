%section#extended-conflict.chapter
  %header
    %h1 Extended Conflict
  %p Most conflicts are transitory matters of moderate scope and propriety. Those few and worthy that could be considered major turning points, however — those deserve our attention in detail.
  %p
    Any player apart from the Story Guide may declare that he wishes to
    %code extend
    a conflict his character participated in and turn it into an
    = succeed "." do
      %code extended conflict
    A conflict is always extended only after the initial Ability checks, and it may be done regardless of whether the character won or lost. An extended conflict will then commence, allowing characters to settle their differences in a detailed blow-by-blow manner.
  %section#why-extend
    %header
      %h2 Why extend?
    %p
      There are two reasons for escalating: one is that you’re unhappy with the result of a lost conflict and wish to have your character strive hard to turn the outcome. Another is a matter of
      = succeed ":" do
        %code
          %a{:href => "/conflict-resolution#conflict-stakes"} stakes manipulation
      there are some conflict goals that might be inappropriate for an outright conflict. Extending is a way of brining those conflicts in play, regardless.
    %p
      For example, the matter of
      %code propriety
      is very much a campaign issue. A heroic pulp adventure game might have the notion that you can’t really, for sure, kill off important characters. Reichenbach Falls might not actually be the end. Similarly the superhero
      %em actually
      permanently abandoning his lady love for another is probably not something to resolve with a simple conflict check. These kinds of campaign-specific norms may often be overridden by escalating — what was inappropriate as an off-hand event becomes the centerpiece of an extended conflict.
    %p
      (There are also, of course, things that players might want to
      %em never
      entertain as a possibility in the campaign, especially if there are kids participating or the events might clash with the intended tone of the campaign. These possibilities need never be accepted as stakes for conflict, simply enough.)
    %p In either case an extended conflict means that the involved characters go into full-body contact with the rules system, burning resources to overcome each other, often consuming their own well-being to succeed. This is fun stuff if the conflict is weighty enough, but if the stakes are not involving it might be just dull — lots of dicing and detailed description of the events, but if nobody cares about the stakes it’s all likely to get boring quickly. So the stakes it’s all likely to get boring quickly. so think carefully before extending, and be sure to remember to give up when the time is right.
  %section#scope-and-stakes-in-extended-conflict
    %header
      %h2 Scope and stakes in extended conflict
    %p When a conflict is extended, the result of the original conflict is annulled in a way: whatever the stakes were, they’re still on the table after an escalation! This might mean that the players have to “rewind” the narrated action a bit, but most of the time it’s enough to note that the seeming victory was just a lull in the action before the real conflict begins. So a character might stand up exhausted from his wrestle with a bear, only to watch in horror as the bear rises as well, to coin an example.
    %p
      At the beginning of the extended conflict the Story Guide makes sure that the
      %code goals
      of the characters are clear. It is entirely conceivable that a character might change goals between the initial conflict and the following extended conflict; the situation has suddenly grown more serious, after all!
    %p The goals of the characters are even more important in extended conflict than they are otherwise, as players are allowed to change them mid-way into the conflict. Action also shifts the narration around the scene, so it’s not a given that the conflict will retain its original form. A wrestling contest might turn into a chase which might become a matter of hiding from a tracking hunter — essentially, the extended conflict sticks around however long the characters stand opposed, regardless of whether their opposition changes form in the meantime.
  %section#negotiation-phase
    %header
      %h2 Negotiation phase
    %p Extended conflict is resolved in rounds of Ability checks; essentially the characters butt heads as long as they dare, until one side gives up or is overrun.
    %p
      Each round begins with a
      = succeed ":" do
        %code negotiation phase
      players each describe what their characters are doing this round to further their goals. They also declare the Ability the character uses during the round. The negotiation phase is so named because it’s not a matter of second-guessing the opposition; the
      %em players
      discuss the situation and describe actions that make sense to all. There are several factors the players need to declare for their characters at this point:
    %p
      %strong> Ability used
      \: Just like a normal Ability check, the player chooses the Ability. However, extended conflicts are so immediate that characters do not have time for support checks from other Abilities. Thus the player only needs to choose one Ability.
    %p
      %strong> Opposition
      \: The players of the participating characters need to determine whether the actions of their characters are directly opposed or not. Each pair of actions is either
      %code opposed
      or
      %code parallel
      in this manner: opposed actions cancel each other out, while parallel actions go around the opposition and have their full effect against the other party. This is purely a situational matter and the players should pick whichever makes more sense for the situation: if one character is trying to convince the other with
      %code Charm (I)
      while being beaten with
      = succeed "," do
        %code Fighting (V)
      say, then the action might well be parallel as the two efforts do not really impede each other. On the other hand, if both characters opted to use similar Abilities, the chances are that their actions would prove opposed in the fiction.
    %p
      %strong> Effect
      \: Each player needs to decide for themselves whether they want their character’s action to provide
      %code
        %a{:href => "/playing-the-game#harm"} Harm
      or
      %code
        %a{:href => "/ability-check#bonus-and-penalty-dice"} bonus dice
      for some other action. This is again largely a matter for the fiction: if the activity of the character somehow tries to directly achieve his goal, then Harm is the obvious effect, while bonus dice are more satisfying for actions that concern setting up an edge for later in the conflict.
    %p
      While this might seem tricky at first, pretty soon players will routinely declare “parallel
      %code Fighting
      for bonus dice as I seek the high ground” or whatever makes sense at the moment. Note that the players may change their action in reaction to what others say they’ll be doing: the negotiation phase only ends when everybody is happy with their declared action.
    %p
      If the players keep switching their actions around because they want different action types, the Story Guide helps them resolve the disagreement. Ultimately the player who wants opposed actions will need to make a
      %code defensive action
      or back down.
    %p Finally, remember that it might be easier at first to just have the players tell the Story Guide what their characters are doing, which the Story Guide can then convert into rules-speak for them. The extended conflict is the most detailed part of the Solar System rules, so it might feel tiresome for some at first; best to use it sparingly and only when escalation really is the word of the moment.
  %section#the-defensive-action
    %header
      %h2 The defensive action
    %p
      The
      %code defensive action
      is a special action available during the negotiation phase. It is always made with a
      %code
        %a{:href => "/character-creation#passive-abilities"} passive Ability
      (one of
      = succeed "," do
        %code Endure (V)
      %code React (I)
      and
      = succeed ")" do
        %code Resist (R)
      and it’s always an opposed action for bonus dice. Furthermore, it’s the only opposed action for bonus dice — other Abilities may only generate bonus dice with parallel actions!
    %p The defensive action is always, by Ability definition, a passive action that doesn’t achieve anything proactive in the fiction. The character might cower in fear, jump nimbly aside, ignore pain and continue whatever he was doing, for example. By its nature the defensive action is always available to the character regardless of conditions — the opponent might be able to force a specific passive Ability, but there is no situation in which a character couldn’t make the defensive action, even if there is nothing else he can do in the fiction.
    %p
      Furthermore, the defensive action has one very cunning use: the player who declares the defensive action may immediately
      = succeed "." do
        %em change his character’s goal in the conflict
      Thus a character might find out in the middle of an extended conflict that the masked avenger assaulting him is actually his wife; certainly a cause for pause and re-evaluation of priorities! The Story Guide (or any player, really) is well within his rights to require a character to spend a round in a defensive action when the character’s goals change.
  %section#resolving-actions
    %header
      %h2 Resolving actions
    %p Resolving the actions is simple after the players have sussed out the negotiation phase: everybody just makes an Ability check for their character with the chosen Ability, with each check having full effect according to action type.
    %p
      There are two notable differences between
      %a{:href => "/ability-check"} normal Ability checks
      and those made in extended conflict. One is support checks: a character may not use multiple Abilities to support a check in extended conflict. Instead, the player needs to make an Ability check for bonus dice and spend those dice on the next round if he wants to use multiple Abilities.
    %p
      The other difference are
      %code surprise dice
      on the first round: the winner of the conflict that was escalated into the extended mode gains bonus dice equal to the difference between his and the opposition’s checks on the first round of the extended conflict. This depicts his initial upper hand before the conflict gets really under way.
    %p The action type negotiated during the negotiation phase determines what each player’s Ability checks do in the conflict:
    %p
      %strong Opposed checks
      are deducted from each other so that only the higher check is left. Specifically, the higher result is lowered in degree by the lower result as far as extended conflict effect goes (but not for purposes of narration or Transcendence, for example), while the lower check disappears entirely.
      %strong Parallel checks
      do not affect each other at all, they both take full effect.
    %p
      %strong Harm checks
      cause Harm to their targets of level equal to the check result, while
      %strong bonus dice checks
      grant bonus dice for the character equal to the result; these dice have to either immediately support another character’s ongoing action, or kept and rolled in the character’s own check during the next round.
    %p
      In other words, an
      %strong opposed check for Harm
      causes the difference between the opposed checks as a Harm level to the opponent (assuming you rolled higher in the first place), while a
      %strong parallel check for Harm
      causes a Harm level equal to the full check result. Likewise, checks
      %strong for bonus dice
      cause either the difference between opposed checks or the full parallel check as bonus dice.
  %section#rolling-a-tie
    %header
      %h2 Rolling a tie
    %p If opposed checks tie each other, neither takes effect. Instead, the characters tire each other out in an extended struggle — both players need to immediately spend an extra Pool point from the associated Pool of their Ability or drop out of the conflict out of sheer exhaustion (or other reason, whatever makes sense in the fiction).
    %p A tie is a great opportunity for the Story Guide to change the situation — some time passes and other characters come into the scene, the conflict participants move into a different location or a temporary effect in the conflict environment runs out, for example. Ideally each tie heralds a drastic enough shift in the fiction to cause the characters to reconsider either their goals or methods: the new conditions might force a character to use some other Ability than the one he’d used so far, for instance.
    %p
      Parallel checks can’t tie each other per se, as they take effect independent of each other. Even then, a group might decide to have
      %code Failure (0)
      result in parallel checks require a Pool point for the character to spring back up into the fight.
  %section#ending-a-round
    %header
      %h2 Ending a round
    %p After the Ability checks are made to determine what happens, the group should take a moment to narrate what happens in the fiction: each character either succeeds or fails in what they are doing, and their actions change the situation around. This has implications for the next round of resolution, as players need to choose new actions and new Abilities, so describing events in dynamic manner is key for having an exciting extended conflict resolution.
    %p
      The end of the round is also a typical moment for a player to decide to
      = succeed "." do
        %code give up
      This is a very important concept, so important that the Story Guide should probably make it a habit to ask at the end of each round whether any participant (himself included!) wants to give up on behalf of their character.
    %p Should a player decide to give up, the conflict ends with the opponent’s victory. The situation is narrated with the latest character goals in mind. If some disagreement about the consequences of the conflict remain, the extended conflict continues until all players with a character in the scene accept the overall outcome.
    %aside.well
      %h2#player-or-character-gives-up Player or Character Gives Up?
      %p
        As elsewhere in the rules, it’s important to note how I use my terms here: it’s the
        %em player
        who gives up when a conflict turns against the
        = succeed "." do
          %em character
        This is not accidental.
      %p Some players might be reluctant to give up in an extended conflict because the character thinks that the situation is important and would strive “to the death” to defend his view. All well and good, but this need not be the player’s angle. It is quite possible that a character fighting to escape from evil cultists, for example, fights to exhaustion, while the player decides that he can’t actually win the conflict and thus gives up — or perhaps he isn’t even that interested in belaboring the point when it’s much more exciting to have the hero get captured!
      %p What’s more, the character “fighting to his utmost to escape” does not need to mean that the player’s mechanical resources are exhausted. A character’s Harm track especially is a rather abstract measure better used as a “drama tank” than a fictional measure. Thus the character might be injured and exhausted without having a blemish on his Harm track, or vice versa!
    %p
      Another way for the extended conflict to end at this point is if one party has suffered Harm at level 7, past
      = succeed "." do
        %code Mortal (6)
      Such a character
      %em cannot
      continue and drops out of the conflict automatically, too tired and injured to go on regardless of the stakes. Furthermore, such a character’s fate is now in the hands of the victor, who may determine any conceivable consequences, up to and including death for the loser. (Any other permanent fates are quite feasible as well depending on the situation; being crippled for life or losing one’s soul, for example.) This is a powerful incentive for giving up earlier.
    %p
      Finally, the conflict always ends if a character cannot fulfill required conditions to continue. Typically this is a matter of paying Pool for acting when suffering a
      %code Mortal
      level of Harm, or when tying the opposition.
    %p If the conflict does not end yet, however, then the players start a new round, beginning with a new negotiation phase. This continues until the conflict ultimately ends, one way or another.
  %section#special-actions
    %header
      %h2 Special actions
    %p
      Sometimes characters do things that are not immediately for Harm or for bonus dice, insofar as the action’s effect is concerned. Usually this comes up in relation to
      = succeed ":" do
        %a{:href => "/secrets-and-crunch"} Secrets
      a Secret might allow a character to do things that do not fall into either of those two categories, such as attacking his enemy in some way that does not cause Harm.
    %p Another typical situation is when a player wants to create an Effect in the middle of an extended conflict — this is likewise allowable, as long as the character’s action makes more sense as an Effect than simple bonus dice for his next action.
    %p The simple rule of thumb in resolving such special actions is to treat any action that requires an Ability check as the character’s action for the round, unless the action is explicitly phrased as not requiring a round in extended conflict. (Thinking of Secrets here, as they can include their own rules for this kind of thing.) All sorts of other minor action, such as speaking, moving around and so on may happen during a round or between rounds freely as long as they do not require an Ability check.
    %p A special action is opposed normally, should the opponent have the means. Whether an action to cast a spell, say, would be opposed or parallel would depend on what spellcasting looks like in the setting as well as what the opponent was specifically doing.
    %p
      All actions with Ability checks have a concrete mechanical effect in extended conflict. It might be Harm or bonus dice or reducing an opposing success (as happens with opposed actions), or it might be establishing an Effect, or any number of other things. In general, every Ability check will spend its result in
      = succeed ";" do
        %em something
      there are no mechanically meaningless actions.
    %aside.well
      %h2#unacceptable-actions Unacceptable Actions
      %p The rules of leverage, propriety and scope hold for actions in extended conflict just like they do when stating conflict goals. A noteworthy special case is that a character cannot negotiate for an action that sidesteps the goals of the conflict — so a character trying to save his sister from the cult priest couldn’t just declare an action to kill the priest, as success in that action would presumably resolve the conflict itself. Instead all actions need to be framed in terms of effort and only narrated after seeing how much Harm the character does and whether the opponent might wish to give up
      %p
        Whether an action is unacceptable or not is, contrary to intuition, a case-by-case issue. The opponent may always object if he thinks that the action leaves his character too strenuous grounds for continuing the conflict. The
        %code choreography of conflict
        is formed by all the possible activities that characters might perform in their efforts at forcing the opposition to give in; the choreography is conceptually constrained by
        %em effectiveness
        on one side and
        %em fairness
        on the other; anything a player might declare as conflict action needs to somehow help his character overcome the opposition, while at the same time being considered
        %em fair
        by the opposing player.
      %p The philosophical basis in running an extended conflict is that the opponent has the right to have his mechanical weight present and accounted for until forced or convinced out of the conflict according to the formal mechanics. Characters might maneuver for advantage with entertaining and smart moves, but that results in conditional penalties for the opponent, not short-circuiting the conflict rules. The only way to close another character off from conflict is to fill his Harm track.
  %section#multiple-characters-in-extended-conflict
    %header
      %h2 Multiple characters in extended conflict
    %p When multiple characters participate in an extended conflict, the procedure gets a teeny bit more complex. The basic structure is the same, however.
    %p During the negotiation phase the players need to figure out who their characters are targeting with their actions and against whom the actions are opposed and against whom parallel. These factors are determined based on the fiction: a physical attack is against whomever it is targeting, while defending the good name of the heiress is opposed against any attempts at slandering her, whether one or many.
    %p The tricky part of this is that a given character may well end up either attacking or defending against several other characters. Who attacks whom is adjudicated based on the described actions. While this is simple in theory, it might cause some slight problems in practice for a new group. Thus, some specific situations:
    %h3#choosing-targets Choosing targets
    %p A character’s target for Harm is usually the character whose action opposes his, but this need not be the case when a character protects another. Even then, though, the protector might force the Harm to be directed against himself, depending on the described situation.
    %h3#attacking-several-targets-with-harm Attacking several targets with Harm
    %p
      When a character’s action affects several other characters, the check result is compared against each separately. Thus, dropping a big rock on several characters with an
      %code Amazing (4)
      check would cause each a 4th level Harm, unless somehow opposed on individual basis.
    %p A defender might well act to save several characters at once, just as the attacker might try to Harm several. Whether a character can protect others beside himself, or needs to choose who to protect, depends on the situation.
    %p As both multiple-attacking and multiple-defending depend on the situation, neither are usually possible without explicit advance preparations. Let the Story Guide make the call when a situation might be interpreted either way.
    %h3#defending-against-several-attacks Defending against several attacks
    %p When several characters act to Harm an individual character, the defender’s action might oppose several of the attacks, just like above. Each opposed attack would get deducted separately by the defender, which might result in several Harm for the defender, one Harm to several attackers, or some combination of both.
    %p Defending against several characters is, of course, just the reverse of attacking several characters. As a rule of thumb, Defensive Actions should be able to oppose all or most attacks simultaneously, unless they come in wildly diverse forms.
    %h3#acting-for-bonus-dice Acting for bonus dice
    %p As mentioned earlier, a character making an action for bonus dice may opt to roll the bonus dice immediately into another character’s check during the same round.
    %p When a Defensive Action is opposed by several characters, the action generates bonus dice according to the strongest opponent’s result.
    %aside.well.variant
      %h2#variant-teams Variant: Teams
      %p
        You might find this method both simpler and more fun in multiple character extended conflict. A group of characters may declare themselves a
        %code team
        when their goals are all similar. Members of the team gain robustness in defense, but lose out on some flexibility.
      %p A team always makes one Ability check for Harm each round instead of each character getting to act separately. One character is chosen to act for the team each round. The others may make Defensive checks or parallel checks for bonus dice as the situation warrants.
      %p
        The team members may spend Pool for each other and
        = succeed ":" do
          %code split Harm
        whenever the team suffers Harm, its level may be distributed into smaller Harms (a 4 into two 2s and so on) for multiple team members. If the team can’t agree on Harm distribution, the primary character takes the full Harm.
      %p Leaving the team or joining it in the middle of conflict requires a Defensive Action to change intent.
  %section#against-effects
    %header
      %h2 Against Effects
    %p
      Effects can play an important role in extended conflict as well, even to the extent of being the only opposition to a character who extends a
      = succeed "." do
        %a{:href => "/conflict-resolution#solo-conflicts"} solo conflict
      Another possibility is that a character brings one or more Effects with him to the conflict.
    %p While Effects can be called upon for bonus dice normally in Extended conflict, their values can be used directly against an opponent as well. Effects do not act, however, only resisting when a character is forced against the Effect by circumstances. For example, an Effect representing a wall, “Wall 3/V”, would not act at all in extended conflict unless a character tried to break, climb or go around the wall.
    %p When the Effect represents something proactive, such as a mob of angry citizens, think of “active” in terms of personal initiative. A mob as an Effect is about as capable of directing its strength as a rolling boulder would be; the character leading the mob might set it to a general direction, but other characters who maneuver out of the way might never need to face the angry extras directly.
    %p When an Effect does get to act, its owner determines normally whether the “action” is opposed or parallel and whether it is for Harm or for bonus dice. The Effect does not make an Ability check, however, but uses its current value directly instead.
    %p When a character supplements his own action with an Effect, the character needs to make his own Ability check and use the Effect as bonus dice. The line between the Effect acting independently and the character using the Effect to supplement his own action is sometimes a bit hazy, but you can’t go wrong by following the group’s notion of what makes sense in the fiction.
    %p When a character acts to disable an Effect with Harm, the Harm is directly deducted from the Effect’s value. Thus Effects are rather frail and will succumb near-immediately to parallel actions, if such can be attempted: while a computer program represented by an Effect might prove a difficult opposition for a hacker, taking a sledgehammer to the computer itself as a parallel action is sure to reduce the Effect to nothing in short order.
    %aside.well
      %h2#against-nothing Against Nothing?
      %p
        When a character fails in a
        %a{:href => "/conflict-resolution#solo-conflicts"} solo conflict
        that is not against an Effect, the extended conflict is night trivial: the character simply needs to make one successful check for Harm to win “against nothing”. Rolling a
        %code Failure (0)
        is considered a tie against “nothing”, though, so the character might still lose by running out of Pool points or having the conditions change as narrated by the Story Guide; hostile characters might arrive, for example, and turn the extended conflict into a real challenge.
      %p Almost certain victory in extended conflict with no opposition is an intentional feature of the Solar System; player characters are assumed to be competent or lucky enough to get by somehow, unless the opposition is actually interesting.
  %section#strategy-in-extended-conflict
    %header
      %h2 Strategy in Extended Conflict
    %p Extended conflict is a good idea when the character wasn’t using his best Ability in the initial clash or he had bad luck. The luck of the dice will even out with several consecutive checks. Opposed checks are a good idea for characters with more staying power, while the stronger party should angle for parallel checks. Bonus dice for your own checks are only efficient if you plan to win with a few high-power blows, perhaps supplemented by Secrets.
    %p Change goals as the situation warrants. Negotiate with the opposition and try to find a goal against which they are willing to give up up. Often winning is as much a matter of credible Ability as of managing to suggest a turn of events where both characters get what they want.
    %p Use narration actively to your benefit: the success or failure of individual actions changes the situation, often influencing different approaches.
    %p If you get into conflict against multiple opponents, it’s crucial to negotiate goals and actions that allow answering them all at once. Escaping from the scene is often just such a goal, as running away helps you equally against all foes. If you must go against multiple opponents, set up smart Effects. A “Plate mail 5/v” will take care of most physical defense for a short while, allowing you to perhaps even the odds.
    %p Give up soon and give up often! Losing a conflict in the Solar System has no mechanical penalties, its only meaning is in the fiction. The side that has more to lose will often win by simple persistence.
